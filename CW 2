#include<iostream>
#include<vector>
using namespace std;

class Car {
private:
    string name;
    int id;
public:
    Car(string n, int i) : name(n), id(i) {
        cout << "Car constructed: " << name << endl;
    }

    ~Car() {
        cout << "Car destroyed: " << name << endl;
    }

    string getName() const {
        return name;
    }

    int getId() const {
        return id;
    }
};

class Garage {
private:
    vector<Car*> cars;
public:
    void parkCar(Car* car) {
        cars.push_back(car);
        cout << car->getName() << " parked in garage" << endl;
    }

    void listCars() {
        cout << "Cars in garage:" << endl;
        for (int i = 0; i < cars.size(); i++) {
            cout << "ID: " << cars[i]->getId() << ", Name: " << cars[i]->getName() << endl;
        }
    }
};

int main(int argc, char* argv[]) {
    if (argc < 3 || argc % 2 == 0) {
        cout << "Invalid arguments! Use: program_name CarName CarID ..." << endl;
        return 1;
    }

    Garage garage;
    vector<Car*> cars;

    for (int i = 1; i < argc; i += 2) {
        string name = argv[i];
        int id = atoi(argv[i + 1]);
        Car* car = new Car(name, id);
        cars.push_back(car);
        garage.parkCar(car);
    }

    garage.listCars();

    for (int i = 0; i < cars.size(); i++) {
        delete cars[i];
    }

    cout << "End of main" << endl;
    return 0;
}


