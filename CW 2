#include<iostream>
#include<vector>
using namespace std;

class Car {
private:
    string name;
    int id;
public:
    Car(string n, int i) : name(n), id(i) {
        cout << "Car constructed: " << name << endl;
    }

    ~Car() {
        cout << "Car destroyed: " << name << endl;
    }

    string getName() const {
        return name;
    }

    int getId() const {
        return id;
    }
};

class Garage {
private:
    vector<Car*> cars; // Aggregation with raw pointers
public:
    void parkCar(Car* car) {
        cars.push_back(car);
        cout << car->getName() << " parked in garage" << endl;
    }

    void listCars() {
        cout << "Cars in garage:" << endl;
        for (int i = 0; i < cars.size(); i++) {
            cout << "ID: " << cars[i]->getId() << ", Name: " << cars[i]->getName() << endl;
        }
    }
};

int main(int argc, char* argv[]) {
    // Demonstrate Aggregation
    Car car2("Honda", 102);
    Car car3("Ford", 103);

    Garage garage;
    garage.parkCar(&car2);
    garage.parkCar(&car3);
    garage.listCars();

    cout << "End of main" << endl;
    return 0;
}

