#include <iostream>
#include <thread>
#include <chrono>
using namespace std;

class Blend {
public:
    void blendJuice() {
        cout << "Selecting Fruits..." << endl;
        cout << "Blending Juice..." << endl;
        for (int i = 0; i < 5; i++) {
            cout << "Blending..." << endl;
            this_thread::sleep_for(chrono::seconds(1));
        }
        cout << "Blending Completed!" << endl;
    }
};

class Grind {
public:
    void grindJuice() {
        cout << "Grinding Juice..." << endl;
        this_thread::sleep_for(chrono::seconds(5));
        cout << "Grinding Completed!" << endl;
    }
};

class JuiceMaker {
private:
    Blend blend;
    Grind grind;
public:
    void makeJuice(string fruit) {
        cout << "Starting Juice Preparation for " << fruit << "..." << endl;
        blend.blendJuice();
        grind.grindJuice();
        cout << fruit << " Juice is Ready!" << endl;
    }
};

int main(int argc, char* argv[]) {
    if (argc != 2) {
        cout << "Invalid Arguments! Use: program_name FruitName" << endl;
        return 1;
    }

    string fruit = argv[1];

    JuiceMaker juiceMaker;
    juiceMaker.makeJuice(fruit);

    cout << "End of Juice Preparation System" << endl;
    return 0;
}
